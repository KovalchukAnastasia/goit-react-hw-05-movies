{"version":3,"file":"static/js/812.7e5255de.chunk.js","mappings":"qOACA,EAAyB,6BAAzB,EAA4D,0BAA5D,EAAqG,mCAArG,EAAqJ,iC,SCArJ,EAA6B,+B,kBCEvBA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uGASD,SAASE,IAAc,IAAD,IAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,gCACG,KACD,iBAAKC,UAAWC,EAAhB,WACE,qDACA,SAACP,EAAD,CAEEQ,MAAO,CAAEC,KAAI,OAAEL,QAAF,IAAEA,GAAF,UAAEA,EAAUI,aAAZ,aAAE,EAAiBC,MAChCC,GAAG,OAHL,iBACO,SAMP,SAACV,EAAD,CAEEQ,MAAO,CAAEC,KAAI,OAAEL,QAAF,IAAEA,GAAF,UAAEA,EAAUI,aAAZ,aAAE,EAAiBC,MAChCC,GAAG,UAHL,oBACO,gBASd,CC9Bc,SAASC,IAAgB,IAAD,IAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDZ,EAAAA,EAAAA,MACaG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAC7CS,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAgB,SAAD,OAAUP,IACtBQ,MAAK,SAAAC,GACCA,GAGLL,EAASK,EACV,IACAC,OAAM,SAAAC,GACLC,MAAMD,EAAME,QACb,GACJ,IASD,OACE,iCACE,4BACG,KACD,mBAAQC,KAAK,SAASpB,UAAWC,EAAjC,UACE,SAAC,KAAD,CACEG,GAAIO,EAEJX,UAAWC,EAHb,oBAEOU,KAKC,KACV,iBAAKX,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXoB,IAAG,yCAAoCZ,EAAMa,aAC7CC,IAAKd,EAAMe,SAEb,2BACG,KACD,wBAAKf,EAAMe,SACX,wCAAgBC,KAAKC,MAA2B,GAArBjB,EAAMkB,cAAjC,QACA,wCACA,uBAAIlB,EAAMmB,YACV,qCACCnB,EAAMoB,QAAS,uBAhCnBpB,EAAMoB,OAGJpB,EAAMoB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAAc,oCAAqBA,EAArB,MAAWA,EAAzB,IAFf,QA+BmC,qDAI1C,SAAClC,EAAD,KACA,SAAC,KAAD,MAGL,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","webpack://react-homework-template/./src/components/AddInfoBar/AddInfoBar.module.css?abf3","components/AddInfoBar/AddInfoBar.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__uXZxd\",\"img\":\"MovieDetails_img__uOAom\",\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"linkButton\":\"MovieDetails_linkButton__3lnm8\"};","// extracted by mini-css-extract-plugin\nexport default {\"addInfoBar\":\"AddInfoBar_addInfoBar__c+yPS\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport style from './AddInfoBar.module.css';\nimport styled from 'styled-components';\nconst StyledLink = styled(NavLink)`\n  color: black;\n  margin-bottom: 10px;\n\n  &.active {\n    color: red;\n  }\n`;\n\nexport default function AddInfoBar() {\n  const location = useLocation();\n  return (\n    <>\n      {' '}\n      <nav className={style.addInfoBar}>\n        <p>Additional information: </p>\n        <StyledLink\n          key={'cast'}\n          state={{ from: location?.state?.from }}\n          to=\"cast\"\n        >\n          Cast\n        </StyledLink>\n        <StyledLink\n          key={'reviews'}\n          state={{ from: location?.state?.from }}\n          to=\"reviews\"\n        >\n          Reviews\n        </StyledLink>\n      </nav>\n    </>\n  );\n}\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport fetchTheMoviedb from '../../services/fetchTheMoviedb';\nimport style from './MovieDetails.module.css';\nimport AddInfoBar from '../../components/AddInfoBar/AddInfoBar';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  useEffect(() => {\n    fetchTheMoviedb(`movie/${movieId}`)\n      .then(response => {\n        if (!response) {\n          return;\n        }\n        setMovie(response);\n      })\n      .catch(error => {\n        alert(error.message);\n      });\n  });\n\n  const genres = () => {\n    if (!movie.genres) {\n      return null;\n    }\n    return movie.genres.map(({ name }) => <span key={name}>{`${name} `}</span>);\n  };\n\n  return (\n    <>\n      <main>\n        {' '}\n        <button type=\"button\" className={style.button}>\n          <Link\n            to={backLinkHref}\n            key={backLinkHref}\n            className={style.linkButton}\n          >\n            Go back\n          </Link>\n        </button>{' '}\n        <div className={style.movieDetails}>\n          <img\n            className={style.img}\n            src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n            alt={movie.title}\n          ></img>\n          <div>\n            {' '}\n            <h2>{movie.title}</h2>\n            <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n            <h3>Overview: </h3>\n            <p>{movie.overview}</p>\n            <h3>Genres: </h3>\n            {movie.genres ? <p>{genres()}</p> : <p>No information!</p>}\n          </div>\n        </div>\n      </main>\n      <AddInfoBar />\n      <Outlet />\n    </>\n  );\n}\n"],"names":["StyledLink","styled","NavLink","AddInfoBar","location","useLocation","className","style","state","from","to","MovieDetails","movieId","useParams","useState","movie","setMovie","backLinkHref","useEffect","fetchTheMoviedb","then","response","catch","error","alert","message","type","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","name"],"sourceRoot":""}